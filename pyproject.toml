[build-system]
requires = ["setuptools>=41", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quetz-server"
version = "0.10.4"
description = "The mamba-org server for conda packages"
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
authors = [
    {name = "QuantStack & Quetz contributors", email = "wolf.vollprecht@quantstack.net"}
]
urls = {homepage = "https://github.com/mamba-org/quetz"}
requires-python = ">=3.7"
keywords = ["conda", "mamba", "server"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "alembic",
    "aiofiles",
    "appdirs",
    "authlib<1.0.0",
    "fastapi",
    "fsspec",
    "h2",
    "httpx>=0.22.0",
    "importlib-metadata",
    "itsdangerous",
    "jinja2",
    "pluggy",
    "prometheus_client",
    "python-multipart",
    "pydantic>=2.0.0",
    "pyyaml",
    "requests",
    "sqlalchemy",
    "sqlalchemy-utils",
    "tenacity",
    "toml",
    "typer>=0.9,<1.0",
    "typing_extensions",
    "ujson",
    "uvicorn",
    "zstandard",
    "aioshutil"
]


[project.optional-dependencies]
azure = ["adlfs"]
gcs = ["gcsfs>=2022.02"]
pam = ["pamela"]
postgre = ["psycopg2"]
s3 = ["s3fs"]
all = ["adlfs", "gcsfs>=2022.02", "pamela", "psycopg2", "s3fs"]
client = ["quetz-client"]
dev = [
    "black",
    "flake8",
    "isort",
    "pre-commit",
    "pytest",
    "pytest-asyncio",
    "pytest-mock",
    "pytest-cov",
    "pytest-timeout",
    "tbump",
]
test = [
    "black",
    "flake8",
    "isort",
    "pre-commit",
    "pytest",
    "pytest-asyncio",
    "pytest-mock",
    "pytest-cov",
    "pytest-timeout",
    "tbump",
]

[project.scripts]
quetz = "quetz.cli:app"

[tool.setuptools.packages.find]
include = ["quetz", "quetz.*"]

[tool.pytest.ini_options]
asyncio_mode="strict"

[tool.black]
skip-string-normalization = true

[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true

[tool.jupyter-releaser.options]
check-imports = ["quetz"]

[tool.check-wheel-contents]
ignore = ["W004"]

[tool.tbump.version]
current = "0.10.4"
regex = '''
  (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)
  ((?P<channel>a|b|rc|.dev)(?P<release>\d+))?
'''

[[tool.tbump.field]]
name = "channel"
default = ""

[[tool.tbump.field]]
name = "release"
default = ""

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "quetz/_version.py"
version_template = '({major}, {minor}, {patch}, "{channel}", "{release}")'

[tool.pyright]
include = ["quetz"]
reportGeneralTypeIssues = false
reportMissingImports = true
reportMissingModuleSource = true
reportMissingTypeStubs = false
reportOptionalMemberAccess = true
reportOptionalOperand = true
reportOptionalSubscript = true
reportPrivateImportUsage = true
reportUnboundVariable = true
reportUndefinedVariable = false
venv = ".venv"
venvPath= "."

[tool.mypy]
ignore_missing_imports = true
plugins = [
  "sqlmypy"
]
disable_error_code = [
  "misc"
]

[tool.coverage.run]
omit = [
  "quetz/tests/*",
]
